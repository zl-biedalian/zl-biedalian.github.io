(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{343:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Cookie, SessionStorage, LocalStorage这三者都可以被用来在浏览器端存储数据，而且都是字符串类型的键值对。\n"),s("br")]),t._v(" "),s("h2",{attrs:{id:"一、cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、cookie"}},[t._v("#")]),t._v(" 一、cookie")]),t._v(" "),s("p",[s("strong",[t._v("概念：")]),t._v(" cookie是纯文本格式，不包含任何可执行的代码信息，伴随着用户请求在 Web 服务器和浏览器之间传递。cookie本质上属于http的范畴，因为http协议本身是无状态的，服务端是没有办法区分请求来自于哪个客户端，即便是来自于同一个客户端的多次请求 我们的服务端也是没有能力来区分的。就是因为http协议是无状态的，所以才需要cookie去维持客户端的状态。\n"),s("br"),t._v(" "),s("strong",[t._v("生成方式:")])]),t._v(" "),s("ul",[s("li",[t._v("客户端生成: 在 JavaScript 中通过 document.cookie 属性，你可以创建、维护和删除 cookie设置 。  document.cookie 属性的值并不会删除存储在页面中的所有 cookie。它只简单的创建或修改字符串中指定的 cookie。 要使用 JavaScript 提取 cookie 的值，只需要从 document.cookie 中读取即可。")]),t._v(" "),s("li",[t._v("服务端生成:\nWeb 服务器通过发送一个称为 Set-Cookie 的 HTTP消息头来创建一个 cookie。"),s("strong",[t._v("注：")]),t._v(" HttpOnly， 为避免跨域脚本 (XSS) 攻击，通过JavaScript的 Document.cookie API无法访问有HttpOnly 标记的Cookie，")])]),t._v(" "),s("br"),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("ul",[s("li",[t._v("安全性  ：由于cookie在HTTP中是明文传递的，其中包含的数据都可以被他人访问，可能会被篡改、盗用。")]),t._v(" "),s("li",[t._v("大小限制： cookie的大小限制在4KB左右，若要做大量存储显然不是理想的选择。")]),t._v(" "),s("li",[t._v("增加流量： cookie每次请求都会被自动添加到Request Header中，无形中增加了流量。cookie信息越大，对服务器请求的时间也越长。因此要慎用cookie，不要在cookie中存储重要和敏感的数据。")])]),t._v(" "),s("p",[s("br"),s("br")]),t._v(" "),s("h2",{attrs:{id:"二、sessionstorage和localstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、sessionstorage和localstorage"}},[t._v("#")]),t._v(" 二、SessionStorage和LocalStorage")]),t._v(" "),s("p",[s("strong",[t._v("概念：")]),t._v(" SessionStorage和LocalStorage都是本地存储,同时空间比Cookie大很多，一般支持5-10M。 浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。 LocalStorage和SessionStorage 基本没区别,唯一的区别在于localstoorage是永久存储在本地,但是sessionstoryage关闭浏览器就丢失")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接受一个键名作为参数，返回键名对应的值。")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sessionStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接受一个键名和值作为参数，将会把键值对添加到存储中，")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果键名存在，则更新其对应的值。")]),t._v("\n sessionStorage "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n localStorage "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接受一个键名作为参数，并把该键名从存储中删除。")]),t._v("\n sessionStorage "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n localStorage "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//清空存储中的所有键名")]),t._v("\n sessionStorage "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n localStorage "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n")])])]),s("br"),t._v(" "),s("p",[s("strong",[t._v("storage事件：")]),t._v("\tStorage 对象发生变化时（创建/更新/删除数据项时，Storage.clear() 方法至多触发一次该事件）会触发。"),s("strong",[t._v("注")]),t._v("：在同一个页面内发生的改变不会起作用。在相同域名下的其他页面发生的改变才会起作用。(修改的页面不会触发事件，与它共享的页面会触发事件)")]),t._v(" "),s("ul",[s("li",[t._v("key \t      :  修改或删除的key值，如果调用clear(),为null")]),t._v(" "),s("li",[t._v("newValue    :  新设置的值，如果调用clear(),为null")]),t._v(" "),s("li",[t._v("oldValue    :  调用改变前的value值,如果调用clear(),为null")]),t._v(" "),s("li",[t._v("url         :  触发该脚本变化的文档的url")]),t._v(" "),s("li",[t._v("storageArea :  当前的storage对象")])]),t._v(" "),s("h2",{attrs:{id:"三、备注"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、备注"}},[t._v("#")]),t._v(" 三、备注：")]),t._v(" "),s("ul",[s("li",[t._v("静态资源是不会携带cookie的")]),t._v(" "),s("li",[t._v("cookie一般都是后台种的，很少让前端来直接写")]),t._v(" "),s("li",[t._v("cookie分:持久级别、session级别")]),t._v(" "),s("li",[t._v("cookie一般用于和session通信")])])])}),[],!1,null,null,null);s.default=e.exports}}]);