(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{327:function(t,s,a){"use strict";a.r(s);var e=a(6),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js模块可以通过两种方式对外暴露函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js模块可以通过两种方式对外暴露函数"}},[t._v("#")]),t._v(" js模块可以通过两种方式对外暴露函数")]),t._v(" "),s("h3",{attrs:{id:"_1、通过返回一个函数对象或一个对象来暴露一个或者多个的内部的函数-内部函数通过闭包的方式-调用外部的属性或者其他的函数-从而能够达到对内部的属性保密的作用-调用时通过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、通过返回一个函数对象或一个对象来暴露一个或者多个的内部的函数-内部函数通过闭包的方式-调用外部的属性或者其他的函数-从而能够达到对内部的属性保密的作用-调用时通过"}},[t._v("#")]),t._v(" 1、通过返回一个函数对象或一个对象来暴露一个或者多个的内部的函数，内部函数通过闭包的方式，调用外部的属性或者其他的函数，从而能够达到对内部的属性保密的作用，调用时通过")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、引入js文件 mytest\n2、申明变量接收js函数 var  f = mytest()\n")])])]),s("h3",{attrs:{id:"_2、通过用window-函数名的方式暴露-这种方式可以在引入js文件后-window对象下可以直接具有对应的属性方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、通过用window-函数名的方式暴露-这种方式可以在引入js文件后-window对象下可以直接具有对应的属性方法"}},[t._v("#")]),t._v(" 2、通过用window.函数名的方式暴露，这种方式可以在引入js文件后，window对象下可以直接具有对应的属性方法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、引入js文件 mytest\n2、直接调用方法\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);